{{- if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    microservice: {{ .Release.Name }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      microservice: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        microservice: {{ .Release.Name }}
    spec:
      containers:
      - image: {{ .Values.image.repository | default "nginx" }}:{{ .Values.image.tag | default "latest" }}
        {{- if .Values.deployment.env }}
        env:
{{ toYaml .Values.deployment.env | indent 8 }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
        name: {{ .Release.Name }}
        ports:
        - containerPort: {{ .Values.service.port | default 80 }}
          protocol: TCP
        {{- if .Values.resources }}
        resources: 
{{ toYaml .Values.resources | indent 10 }}
        {{- end}}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
{{- end }}
